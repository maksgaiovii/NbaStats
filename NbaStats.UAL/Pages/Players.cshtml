@page
@model NbaStats.UAL.Pages.PlayersModel
@{
    string searchName = HttpContext.Request.Query["searchName"].ToString();
}

<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchName" class="form-control" placeholder="Search by name" value="@searchName" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<h2>Players</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Team</th>
            <th>Position</th>
        </tr>
    </thead>
    <tbody>
    @if (Model?.Players != null)
    {
        foreach (var player in Model.Players)
        {
            <tr onclick="window.location.href='/Player?id=@player.PlayerId'" style="cursor:pointer;">
                <td>@player.Name</td>
                <td><a href="/Team?teamId=@player.Team.TeamId">@player.Team.Name</a></td>
                <td>@player.Position</td>
            </tr>
        }
    }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        <li class="page-item @(Model?.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="?page=@((Model?.CurrentPage ?? 1) - 1)@(string.IsNullOrEmpty(searchName) ? "" : $"&searchName={searchName}")">Previous</a>
        </li>
        <li class="page-item @(Model?.CurrentPage == Model?.TotalPages ? "disabled" : "")">
            <a class="page-link" href="?page=@((Model?.CurrentPage ?? 1) + 1)@(string.IsNullOrEmpty(searchName) ? "" : $"&searchName={searchName}")">Next</a>
        </li>
    </ul>
</nav>